// This file is @generated by prost-build.
/// Config is the master config of Xray. Xray takes this config as input and
/// functions accordingly.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Config {
    /// Inbound handler configurations. Must have at least one item.
    #[prost(message, repeated, tag = "1")]
    pub inbound: ::prost::alloc::vec::Vec<InboundHandlerConfig>,
    /// Outbound handler configurations. Must have at least one item. The first
    /// item is used as default for routing.
    #[prost(message, repeated, tag = "2")]
    pub outbound: ::prost::alloc::vec::Vec<OutboundHandlerConfig>,
    /// App is for configurations of all features in Xray. A feature must
    /// implement the Feature interface, and its config type must be registered
    /// through common.RegisterConfig.
    #[prost(message, repeated, tag = "4")]
    pub app: ::prost::alloc::vec::Vec<super::common::serial::TypedMessage>,
    /// Configuration for extensions. The config may not work if corresponding
    /// extension is not loaded into Xray. Xray will ignore such config during
    /// initialization.
    #[prost(message, repeated, tag = "6")]
    pub extension: ::prost::alloc::vec::Vec<super::common::serial::TypedMessage>,
}
/// InboundHandlerConfig is the configuration for inbound handler.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InboundHandlerConfig {
    /// Tag of the inbound handler. The tag must be unique among all inbound
    /// handlers
    #[prost(string, tag = "1")]
    pub tag: ::prost::alloc::string::String,
    /// Settings for how this inbound proxy is handled.
    #[prost(message, optional, tag = "2")]
    pub receiver_settings: ::core::option::Option<super::common::serial::TypedMessage>,
    /// Settings for inbound proxy. Must be one of the inbound proxies.
    #[prost(message, optional, tag = "3")]
    pub proxy_settings: ::core::option::Option<super::common::serial::TypedMessage>,
}
/// OutboundHandlerConfig is the configuration for outbound handler.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct OutboundHandlerConfig {
    /// Tag of this outbound handler.
    #[prost(string, tag = "1")]
    pub tag: ::prost::alloc::string::String,
    /// Settings for how to dial connection for this outbound handler.
    #[prost(message, optional, tag = "2")]
    pub sender_settings: ::core::option::Option<super::common::serial::TypedMessage>,
    /// Settings for this outbound proxy. Must be one of the outbound proxies.
    #[prost(message, optional, tag = "3")]
    pub proxy_settings: ::core::option::Option<super::common::serial::TypedMessage>,
    /// If not zero, this outbound will be expired in seconds. Not used for now.
    #[prost(int64, tag = "4")]
    pub expire: i64,
    /// Comment of this outbound handler. Not used for now.
    #[prost(string, tag = "5")]
    pub comment: ::prost::alloc::string::String,
}
