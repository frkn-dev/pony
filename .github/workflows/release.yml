name: Release

on:
  push:
    tags: [ '*' ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: frknorg
  API_IMAGE_NAME: pony-api
  BOT_IMAGE_NAME: pony-bot
  DOCKER_TAG: latest

jobs:
  build-agent:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true

      - name: Install protobuf-compiler
        run: sudo apt-get install -y protobuf-compiler

      - name: Build
        run: cargo build --no-default-features --bin agent --features agent

  build-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true

      - name: Build
        run: cargo build --bin api --no-default-features --features api
        
  build-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
          override: true

      - name: Build
        run: cargo build --bin bot --no-default-features --features bot


  release:
    name: Release
    needs: [build-api, build-agent, build-bot]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
  
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          default: true
          override: true

      - name: Install protobuf-compiler
        run: sudo apt-get install -y protobuf-compiler

      - name: Install zig
        run: pip3 install ziglang
      
      - name: Install cargo-zigbuild
        run: cargo install --locked cargo-zigbuild
      
      - name: Add target
        run: rustup target add x86_64-unknown-linux-gnu
      
      - name: Build statically linked binary
        run: cargo zigbuild --release --target x86_64-unknown-linux-gnu

      - name: Get architecture
        id: arch
        run: echo "ARCH=$(uname -m)" >> $GITHUB_ENV

      - name: Rename binaries with architecture
        run: |
          mv target/x86_64-unknown-linux-gnu/release/api target/release/api-${{ env.ARCH }}
          mv target/x86_64-unknown-linux-gnu/release/agent target/release/agent-${{ env.ARCH }}
          mv target/x86_64-unknown-linux-gnu/release/bot target/release/bot-${{ env.ARCH }}
    
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/api-${{ env.ARCH }}
            target/release/agent-${{ env.ARCH }}
            target/release/bot-${{ env.ARCH }}
            deploy/install
            docs/*
            README.md
            config-agent-example.toml
            config-api-example.toml
            config-bot-example.toml

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-api:
    name: Push Api Docker image 
    needs: [build-api, build-agent, build-bot]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ env.REGISTRY }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME}}
      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-bot:
    name: Push Bot Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.REGISTRY }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Extract Docker metadata for bot
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.BOT_IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
  
      - name: Build and push bot image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.bot
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
